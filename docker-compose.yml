version: "3.9"

services:
  reverse_proxy:
    #image: "traefik:v2.10"
    image: my_treafik
    build:
      context: ./traefik/
    #command:
    #  - "--api.insecure=true"
    #  - "--providers.docker=true"
    #  - "--accesslog=true"
    #  - "--accesslog.filePath=/logs/access.log"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  portainer:
    image: portainer/portainer-ce:latest
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    labels:
      # Frontend
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`portainer.localhost`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.services.frontend.loadbalancer.server.port=9000"
      - "traefik.http.routers.frontend.service=frontend"
      - "traefik.http.routers.frontend.tls=true"

      # Edge
      - "traefik.http.routers.edge.rule=Host(`edge.localhost`)"
      - "traefik.http.routers.edge.entrypoints=websecure"
      - "traefik.http.services.edge.loadbalancer.server.port=8000"
      - "traefik.http.routers.edge.service=edge"
      - "traefik.http.routers.edge.tls=true"

  pizza_api:
    #container_name: pizza_api_service
    image: pizza_api
    build:
      context: ./api/
    deploy:
      mode: replicated
      replicas: 3
    expose:
      - "7000"
    labels:
      # Explicitly tell Traefik to expose this container
      - "traefik.enable=true"
      # The domain the service will respond to
      - "traefik.http.routers.pizza_api.rule=(Host(`localhost`) && PathPrefix(`/api`))"
      # To make sticky sessions possible
      - "traefik.http.services.pizza_api.loadbalancer.sticky.cookie=true"
      - "traefik.http.services.pizza_api.loadBalancer.sticky.cookie.name=sticky_pizza"
      # To add https
      - "traefik.http.routers.pizza_api.entrypoints=web,websecure"
      - "traefik.http.routers.pizza_api.tls=true"

  web_app:
    #container_name: custom_nginx
    image: webserver
    build:
      context: ./static_site_content/
    deploy:
      mode: replicated
      replicas: 3
    expose:
      - "80"
    labels:
      # Explicitly tell Traefik to expose this container
      - "traefik.enable=true"
      # The domain the service will respond to
      - "traefik.http.routers.web_app.rule=Host(`localhost`)"
      # To add https
      - "traefik.http.routers.web_app.entrypoints=web,websecure"
      - "traefik.http.routers.web_app.tls=true"

volumes:
  portainer_data: